<% include boilerplates/topBun.ejs%>

	<div class="flex">
		<span id="ticles">
			<h4>Previous Posts</h4>
		</span>

		<span id="can"></span>
		<form id="edit">
			<div id="field">
				<input type="text" id="title" placeholder="TITLE" name="title" />
				<br>

				<textarea type="text" placeholder="ARTICLE" id="art" name="article" style="height:370px;width:100%;" rows="4" cols="50"></textarea>
				<br>

				<select id="cata" name="cata">
					<option disabled selected placeholder="TOPICS"></option>
					<option value="world">world</option>
					<option value="sex">sex</option>
					<option value="fashion">fashion</option>
					<option value="gossip">gossip</option>     
				</select>	
				<br>

				<button id="post" type="submit">POST</button>
				<span id="up"></span>
			</div>

			<div id="styles">
				<h4>Style</h4>
				<div class="flex">
					<div id="all">
						<h5>*</h5>
						<div>
							<span>Color</span>
							<br>
							<select id="ftcolor"></select>
							<br>
							<span>Font</span>
							<br>
							<select id="ftname"></select>
							<br> 
							<span>Size</span>
							<br>
							<select id="ftsize"></select>
							<br>
							Bold <input type="checkbox" id="bold" value="bold">
							<br>
							Italic <input type="checkbox" id="italic" value="italic">
							<br>
							Underlined <input type="checkbox" id="underline" value="underline">
							<br>
							Indent <input type="checkbox" id="indent" value="indent">
						</div>
					</div>
					<div id="delta">
						<h5>1</h5>
						<div>
							<span>Color</span>
							<br>
							<select id="ftcolor"></select>
							<br>
							<span>Font</span>
							<br>
							<select id="ftname"></select>
							<br>
							<span>Size</span>
							<br>
							<select id="ftsize"></select>
							<br>
							Bold <input type="checkbox" id="bold" value="bold">
							<br>
							Italic <input type="checkbox" id="italic" value="italic">
							<br>
							Underlined <input type="checkbox" id="underline" value="underline">
							<br>
							Indent <input type="checkbox" id="indent" value="indent">
						</div>
					</div>
					<div id="alpha">
						<h5>2</h5>
						<div>
							<span>Color</span>
							<br>
							<select id="ftcolor"></select>
							<br>
							<span>Font</span>
							<br>
							<select id="ftname"></select>
							<br>
							<span>Size</span>
							<br>
							<select id="ftsize"></select>
							<br>
							Bold <input type="checkbox" id="bold" value="bold">
							<br>
							Italic <input type="checkbox" id="italic" value="italic">
							<br>
							Underlined <input type="checkbox" id="underline" value="underline">
							<br>
							Indent <input type="checkbox" id="indent" value="indent">
						</div>
					</div>
				</div>
			</div>
		</form>

	</div>

	<% include boilerplates/styleTop.ejs %>

		let ftcolor = document.querySelector('#ftcolor');
		let font = document.querySelector('#ftname');
		let size = document.querySelector('#ftsize');
		console.log("in loop");

		ftcolor.innerHTML = "";
		font.innerHTML = "";
		size.innerHTML = "";

		let colors = ['black','red','green','blue','purple'];
		let fonts = ['Arial','Helvetica','Times New Roman'];

		console.log("Num of colors: "+colors.length);
		console.log("Num of fonts: "+fonts.length);

		// let option = document.createElement('option');

		for(let i=0; i<colors.length; i++){
			ftcolor.innerHTML += `<option id="${colors[i]}">${colors[i]}</option>`;
			// option.appendChild(document.createTextNode(`${colors[i]}`));
			// color.appendChild(option);
		}
		for(let i=0; i<fonts.length; i++){
			font.innerHTML += `<option id="${fonts[i]}">${fonts[i]}</option>`;
			// option.appendChild(document.createTextNode(`${fonts[i]}`));
			// font.appendChild(option);
		}
		for(let i=8; i<=32; i+=2){
			size.innerHTML += `<option id="${[i]}">${[i]}</option>`;
			// option.appendChild(document.createTextNode(`${[i]}`));
			// size.appendChild(option);
		}

		all.on('value', gotData, errData);

		let art = [];
		let tit = [];
		let cat = [];
		let lekeys = [];

		let ti = document.querySelector('#title');
		let ar = document.querySelector('#art');
		let ca = document.querySelector('#cata');
		let arties = document.querySelector("#ticles");


		document.querySelector('#edit').addEventListener('submit',submitForm);
		function submitForm(e){
			e.preventDefault();
			console.log('in submit');

			let title = getInputVal('title');
			let article = getInputVal('art');
			let catagory = getInputVal('cata');

			let col = getInputVal('ftcolor');
			let nam = getInputVal('ftname');
			let siz = getInputVal('ftsize');

			let bol = getInputVal('bold');
			let ita = getInputVal('italic');
			let und = getInputVal('underline');
			let ind = getInputVal('indent');

			let main = getInputVal('all');
			let delta = getInputVal('delta');
			let alpha = getInputVal('alpha');

			arties.innerHTML = "<h4>Previous Posts</h4>"

			ti.value = "";
			ar.value = "";
			ca.value = "";

			saveMessage(title,article,catagory,main,delta,alpha,col,nam,siz,bol,ita,und,ind);
		}

		function gotData(data){
			console.log("in got");

			let names = data.val();
			let keys = Object.keys(names);
			// console.log(keys);
			for(let i=0; i<keys.length; i++){
				let k = keys[i];
				lekeys.push(keys[i]);
				// console.log(k);
				art.push(names[k].article);
				tit.push(names[k].title);
				cat.push(names[k].catagory);

				// console.log(names[k].catagory);
			}

			let articles = art.reverse();
			let titles = tit.reverse();
			let catagories = cat.reverse();
			let duh = lekeys.reverse();

			// console.log(catagories);

			for (let j=0; j<keys.length; j++){
				console.log("looping in got");
				// console.log("articles: "+articles[j].replace(/\\/g,""));
				// console.log("annddd: "+articles.length);			
				
				let button = document.createElement('button');
				button.setAttribute('onclick',`fill("${titles[j].length+articles[j].length*2}","${duh[j]}","${catagories[j]}")`);
				button.setAttribute('class','u-full-width button-primary size');
				button.appendChild(document.createTextNode(`${titles[j]}`));
				arties.appendChild(button);
			}
		}

		let up = document.querySelector('#up');
		let pst = document.querySelector('#post'); 
		let can = document.querySelector('#can'); 
		function fill(head,key,specific){
			console.log("fill clicked");

			// let s = "";

			db.ref(`${specific}`).on('value', function(delta){
				let games = delta.val();
				let peas = Object.keys(games);
				for(let i=0; i<peas.length; i++){
					let k = peas[i];
					if(head == games[k].title.length+games[k].article.length*2){
						// console.log(games[k].title);
						console.log("specific key is: "+peas[i]);
						// s = peas[i];
						up.innerHTML = `<button onclick='update("${key}","${peas[i]}")'>Update</button>`;
						can.innerHTML = "<button id='cancel' onclick='cell()'>Cancel</button>";
						pst.setAttribute('disabled','true'); 
						pst.setAttribute('class','dull'); 
					}
				}
			});

			// console.log("s is: "+s);

			all.on('value', function(data){
				// console.log("in fill");

				// console.log(key);
				let names = data.val();

				let title = names[key].title;
				let article = names[key].article;
				let catagory = names[key].catagory;

				ti.value = title;
				ar.value = article;
				ca.value = catagory;
			});
		}

		function cell(){
			console.log("in cancel");

			location.reload();

			// arties.innerHTML = "<h4>Previous Posts</h4>";

			// ti.value = "";
			// ar.value = "";
			// ca.value = "";

			// up.innerHTML = "";
			// can.innerHTML = "";
			// pst.removeAttribute('class','dull');
			// pst.removeAttribute('disabled');

			// all.on('value', gotData, errData);

			console.log("canceled");
		}
		
		function update(k,s){
			console.log('in update');

			arties.innerHTML = "<h4>Previous Posts</h4>";

			// console.log("k is: "+k+", s is: "+s);
			firebase.database().ref().child(`${ca.value}/${s}`).update({ 
				title: `${ti.value}`, 
				article: `${ar.value}`,
				catagory: `${ca.value}` 
			});
			firebase.database().ref().child(`all/${k}`).update({ 
				title: `${ti.value}`, 
				article: `${ar.value}`, 
				catagory: `${ca.value}` 
			});

			ti.value = "";
			ar.value = "";
			ca.value = "";

			up.innerHTML = "";
			can.innerHTML = "";
			pst.removeAttribute('class','dull');
			pst.removeAttribute('disabled');

			console.log('updated');
		}
		function errData(data){
			console.log("ERROR: "+data);
		}


		function getInputVal(id){
			return document.getElementById(id).value;
		}

		function saveMessage(t, a, c, m, d, ah, co, n, s, b, it, u, ind){
			console.log("saving data...");

			// arties.innerHTML = "<h4>Previous Posts</h4>";
			
			// ti.value = "";
			// ar.value = "";
			// ca.value = "";

			let catRef = db.ref(c);
			let data = {
				title: t,
				article: a,
				catagory: c
			}
			all.push(data);
			catRef.push(data);

			let allKeys = [];
			let revAll = [];
			let al;
			all.on('value', function(zeta){
				let names = zeta.val();
				let keys = Object.keys(names);

				for(let i=0; i<keys.length; i++){
					allKeys.push(keys[i]);
				}

				revAll = allKeys.reverse();

				console.log("the first key in all is: "+revAll[0]);

				al = revAll[0];
			});

			let specKeys = [];
			let revSpec = [];
			let spec;
			catRef.on('value', function(xeta){
				let names = xeta.val();
				let keys = Object.keys(names);

				for(let j=0; j<keys.length; j++){
					specKeys.push(keys[j]);
				}

				revSpec = specKeys.reverse();

				console.log("the first key in spec is: "+revSpec[0]);

				spec = revSpec[0];
			});

			console.log(`m is ${m}. d is ${d}. al is ${al}. co is ${co}, n is ${n}, s is ${s}, b is ${b}, it is ${it}, u is ${u}, ind is ${ind}`);

			let style = {
				color: co,
				name: n,
				size: s,
				bold: b,
				italic: it,
				underline: u,
				indent: ind
			}

			// db.ref(`all/${al}/styles/${m}`).push(style);
			
			// db.ref(`all/${al}/styles/${d}`).push(style);
			
			// arties.innerHTML = "<h4>Previous Posts</h4>";
			
			// ti.value = "";
			// ar.value = "";
			// ca.value = "";

			// db.ref(`all/${al}/styles/${ah}`).push(style);

			console.log("saved");
		}

<% include boilerplates/bottomBun.ejs %>